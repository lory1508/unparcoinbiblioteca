{"version":3,"file":"undeployAction.js","sources":["../../src/_internal/cli/actions/app/undeployAction.ts"],"sourcesContent":["import {type CliCommandArguments, type CliCommandContext} from '@sanity/cli'\n\nimport {debug as debugIt} from '../../debug'\nimport {deleteUserApplication, getUserApplication} from '../deploy/helpers'\nimport {type UndeployStudioActionFlags} from '../deploy/undeployAction'\n\nconst debug = debugIt.extend('undeploy')\n\nexport default async function undeployAppAction(\n  _: CliCommandArguments<UndeployStudioActionFlags>,\n  context: CliCommandContext,\n): Promise<void> {\n  const {apiClient, chalk, output, prompt, cliConfig} = context\n\n  const client = apiClient({\n    requireUser: true,\n    requireProject: false,\n  }).withConfig({apiVersion: 'v2024-08-01'})\n\n  // Check that the project has an application ID\n  let spinner = output.spinner('Checking application info').start()\n\n  const appId =\n    cliConfig && '__experimental_appConfiguration' in cliConfig\n      ? cliConfig.__experimental_appConfiguration?.appId\n      : undefined\n\n  if (!appId) {\n    spinner.fail()\n    output.print(`No application ID provided.`)\n    output.print(\n      'Please set appId in `__experimental_appConfiguration` in sanity.cli.js or sanity.cli.ts.',\n    )\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  const userApplication = await getUserApplication({\n    client,\n    appId,\n  })\n\n  spinner.succeed()\n\n  if (!userApplication) {\n    spinner.fail()\n    output.print('Application with the given ID does not exist.')\n    output.print('Nothing to undeploy.')\n    return\n  }\n\n  // Double-check\n  output.print('')\n\n  const shouldUndeploy = await prompt.single({\n    type: 'confirm',\n    default: false,\n    message:\n      `This will undeploy ${chalk.yellow(userApplication.appHost)} and make it unavailable for your users.\n  The hostname will be available for anyone to claim.\n  Are you ${chalk.red('sure')} you want to undeploy?`.trim(),\n  })\n\n  if (!shouldUndeploy) {\n    return\n  }\n\n  spinner = output.spinner('Undeploying application').start()\n  try {\n    await deleteUserApplication({\n      client,\n      applicationId: userApplication.id,\n      appType: 'coreApp',\n    })\n    spinner.succeed()\n  } catch (err) {\n    spinner.fail()\n    debug('Error undeploying application', err)\n    throw err\n  }\n\n  output.print(\n    `Application undeploy scheduled. It might take a few minutes before ${chalk.yellow(userApplication.id)} is unavailable.`,\n  )\n}\n"],"names":["debug","debugIt","extend","undeployAppAction","_","context","apiClient","chalk","output","prompt","cliConfig","client","requireUser","requireProject","withConfig","apiVersion","spinner","start","appId","__experimental_appConfiguration","undefined","fail","print","userApplication","getUserApplication","succeed","single","type","default","message","yellow","appHost","red","trim","deleteUserApplication","applicationId","id","appType","err"],"mappings":";;AAMA,MAAMA,QAAQC,UAAAA,MAAQC,OAAO,UAAU;AAETC,eAAAA,kBAC5BC,GACAC,SACe;AACT,QAAA;AAAA,IAACC;AAAAA,IAAWC;AAAAA,IAAOC;AAAAA,IAAQC;AAAAA,IAAQC;AAAAA,EAAAA,IAAaL,SAEhDM,SAASL,UAAU;AAAA,IACvBM,aAAa;AAAA,IACbC,gBAAgB;AAAA,EACjB,CAAA,EAAEC,WAAW;AAAA,IAACC,YAAY;AAAA,EAAA,CAAc;AAGzC,MAAIC,UAAUR,OAAOQ,QAAQ,2BAA2B,EAAEC,MAAM;AAEhE,QAAMC,QACJR,aAAa,qCAAqCA,YAC9CA,UAAUS,iCAAiCD,QAC3CE;AAEN,MAAI,CAACF,OAAO;AACVF,YAAQK,KAAK,GACbb,OAAOc,MAAM,6BAA6B,GAC1Cd,OAAOc,MACL,0FACF,GACAd,OAAOc,MAAM,sBAAsB;AACnC;AAAA,EAAA;AAGIC,QAAAA,kBAAkB,MAAMC,2BAAmB;AAAA,IAC/Cb;AAAAA,IACAO;AAAAA,EAAAA,CACD;AAID,MAFAF,QAAQS,WAEJ,CAACF,iBAAiB;AACZF,YAAAA,QACRb,OAAOc,MAAM,+CAA+C,GAC5Dd,OAAOc,MAAM,sBAAsB;AACnC;AAAA,EAAA;AAeF,MAXAd,OAAOc,MAAM,EAAE,GAWX,CATmB,CAAA,MAAMb,OAAOiB,OAAO;AAAA,IACzCC,MAAM;AAAA,IACNC,SAAS;AAAA,IACTC,SACE,sBAAsBtB,MAAMuB,OAAOP,gBAAgBQ,OAAO,CAAC;AAAA;AAAA,YAErDxB,MAAMyB,IAAI,MAAM,CAAC,yBAAyBC,KAAK;AAAA,EAAA,CACxD,GAMDjB;AAAAA,cAAUR,OAAOQ,QAAQ,yBAAyB,EAAEC,MAAM;AACtD,QAAA;AACF,YAAMiB,8BAAsB;AAAA,QAC1BvB;AAAAA,QACAwB,eAAeZ,gBAAgBa;AAAAA,QAC/BC,SAAS;AAAA,MAAA,CACV,GACDrB,QAAQS,QAAQ;AAAA,aACTa,KAAK;AACZtB,YAAAA,QAAQK,KAAK,GACbrB,MAAM,iCAAiCsC,GAAG,GACpCA;AAAAA,IAAAA;AAGR9B,WAAOc,MACL,sEAAsEf,MAAMuB,OAAOP,gBAAgBa,EAAE,CAAC,kBACxG;AAAA,EAAA;AACF;;"}