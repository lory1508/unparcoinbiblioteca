{"version":3,"file":"pane.mjs","sources":["../../src/structure/i18n/index.ts","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/Delay.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/menuNodes.ts","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/structure/panes/document/documentPanel/banners/AddToReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/DraftLiveEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/structureBuilder/util/getExtendedProjection.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/structureBuilder/SerializeError.ts","../../src/structure/structureBuilder/Sort.ts","../../src/structure/structureBuilder/MenuItem.ts","../../src/structure/structureBuilder/MenuItemGroup.ts","../../src/structure/structureBuilder/util/validateId.ts","../../src/structure/structureBuilder/util/getStructureNodeId.ts","../../src/structure/structureBuilder/Component.ts","../../src/structure/structureBuilder/util/resolveTypeForDocument.ts","../../src/structure/structureBuilder/views/View.ts","../../src/structure/structureBuilder/views/ComponentView.ts","../../src/structure/structureBuilder/views/FormView.ts","../../src/structure/structureBuilder/views/index.ts","../../src/structure/structureBuilder/Document.ts","../../src/structure/structureBuilder/InitialValueTemplateItem.ts","../../src/structure/structureBuilder/Intent.ts","../../src/structure/structureBuilder/Layout.ts","../../src/structure/structureBuilder/GenericList.ts","../../src/structure/structureBuilder/DocumentList.ts","../../src/structure/structureBuilder/List.ts","../../src/structure/structureBuilder/ListItem.ts","../../src/structure/structureBuilder/DocumentListItem.ts","../../src/structure/structureBuilder/DocumentTypeList.ts","../../src/structure/structureBuilder/documentTypeListItems.ts","../../src/structure/structureBuilder/createStructureBuilder.ts","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts","../../src/structure/StructureToolProvider.tsx"],"sourcesContent":["import {defineLocaleResourceBundle} from 'sanity'\n\n/**\n * The locale namespace for the structure tool\n *\n * @public\n */\nexport const structureLocaleNamespace = 'structure' as const\n\n/**\n * The default locale bundle for the structure tool, which is US English.\n *\n * @internal\n */\nexport const structureUsEnglishLocaleBundle = defineLocaleResourceBundle({\n  locale: 'en-US',\n  namespace: structureLocaleNamespace,\n  resources: () => import('./resources'),\n})\n\n/**\n * The locale resource keys for the structure tool.\n *\n * @alpha\n * @hidden\n */\nexport type {StructureLocaleResourceKeys} from './resources'\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {unstable_useValuePreview as useValuePreview, useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  if (error) {\n    return <>{t('doc-title.error.text', {errorMessage: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {actions, backButton, border, contentAfter, loading, subActions, tabs, tabIndex, title} =\n    props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 2}\n                padding={2}\n                tabIndex={tabIndex}\n              >\n                {loading && (\n                  <Box>\n                    <TitleTextSkeleton animated radius={1} size={1} />\n                  </Box>\n                )}\n                {!loading && (\n                  <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions && subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  isPublishedPerspective,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  useIsReleaseActive,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const isReleaseActive = useIsReleaseActive()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  const disabledByPerspectiveTooltipProps = {\n    content: tCore(\n      isPublishedPerspective(selectedPerspective)\n        ? 'new-document.disabled-published.tooltip'\n        : 'new-document.disabled-release.tooltip',\n    ),\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted || !isReleaseActive\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={\n            disabled\n              ? disabledByPerspectiveTooltipProps\n              : {content: t('pane-header.create-new-button.tooltip')}\n          }\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          disabled={!isReleaseActive}\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={\n            isReleaseActive\n              ? {content: t('pane-header.create-new-button.tooltip')}\n              : disabledByPerspectiveTooltipProps\n          }\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                context=\"create-document-type\"\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: DocumentActionDescription[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, DocumentActionDescription>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ConnectorContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ConnectorContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ConnectorContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        // eslint-disable-next-line camelcase\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams, createPathWithParams} = usePaneRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      // Generate a path based on the current pane params.\n      // We force a value for `inspect` to ensure that this is included in URLs when comments\n      // are created outside of the inspector context (i.e. directly on the field)\n      // @todo: consider filtering pane router params and culling all non-active RHS panes prior to generating this link\n      const path = createPathWithParams({\n        ...paramsRef.current,\n        comment: commentId,\n        inspect: COMMENTS_INSPECTOR_NAME,\n      })\n      return `${window.location.origin}${path}`\n    },\n    [createPathWithParams],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const systemStack = [editState?.published?._id, editState?.draft?._id]\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\ninterface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, title, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const subscribed = Boolean(displayed)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: displayed,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  if (title) {\n    return {error: undefined, title}\n  }\n\n  if (!displayed) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: SchemaType) => schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...(draft.snapshot || {})} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...(published.snapshot || {})} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType, lastNonDeletedRevId} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    if (lastNonDeletedRevId) {\n      restore.execute(lastNonDeletedRevId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, lastNonDeletedRevId])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={\n        lastNonDeletedRevId\n          ? {\n              onClick: handleRestore,\n              text: t('banners.deleted-document-banner.restore-button.text'),\n            }\n          : undefined\n      }\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {type ToastParams, useToast} from '@sanity/ui'\nimport {useEffect} from 'react'\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    return () => {\n      if (params.enabled) {\n        toast.push({\n          ...params,\n          // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n          duration: 0.01,\n        })\n      }\n    }\n  }, [params, toast])\n}\n","import {Flex, Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\nimport {structureLocaleNamespace} from 'sanity/structure'\n\nimport {Button} from '../../../../../ui-components'\nimport {useConditionalToast} from '../documentViews/useConditionalToast'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function AddToReleaseBanner({\n  documentId,\n  currentRelease,\n  value,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  value?: Record<string, unknown>\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(\n          getReleaseIdFromReleaseDocumentId(currentRelease._id),\n          documentId,\n          value,\n        )\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast, value])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      paddingY={0}\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={1} flex={1}>\n          <Text size={1}>\n            <Translate\n              i18nKey=\"banners.release.not-in-release\"\n              t={t}\n              values={{\n                title:\n                  currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n              }}\n              components={{\n                VersionBadge: getVersionInlineBadge(currentRelease),\n              }}\n            />\n          </Text>\n          <Flex gap={2} align=\"center\" justify=\"center\">\n            <Button\n              text={t('banners.release.action.add-to-release')}\n              tone={tone}\n              disabled={Boolean(versionCreateState)}\n              onClick={handleAddToRelease}\n            />\n          </Flex>\n        </Flex>\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\nimport {structureLocaleNamespace, usePaneRouter} from 'sanity/structure'\n\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      paddingY={2}\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={1} flex={1}>\n          <Text size={1}>\n            <Translate\n              t={t}\n              i18nKey={description}\n              values={{\n                title,\n              }}\n              components={{\n                VersionBadge: getVersionInlineBadge(release),\n              }}\n            />\n          </Text>\n        </Flex>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {type ObjectSchemaType, Translate, useDocumentOperation, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface DraftLiveEditBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n}\n\nexport function DraftLiveEditBanner({\n  displayed,\n  documentId,\n  schemaType,\n}: DraftLiveEditBannerProps): React.JSX.Element | null {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey={'banners.live-edit-draft-banner.text'}\n              values={{schemaType: schemaType.title}}\n            />\n          </Text>\n\n          <Button\n            onClick={handlePublish}\n            text={t('action.publish.live-edit.label')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.publish.tooltip')}}\n            loading={isPublishing}\n          />\n\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.live-edit-draft-banner.discard.tooltip')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.discard.tooltip')}}\n            loading={isDiscarding}\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {structureLocaleNamespace} from 'sanity/structure'\n\nimport {Button} from '../../../../../ui-components'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      paddingY={0}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Flex direction={'row'} align=\"center\" justify=\"space-between\" flex={1}>\n          <Text size={1}>\n            <Flex direction={'row'} gap={1}>\n              {documentVersionsTitleList.length > 1 ? (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                  values={{count: documentVersionsTitleList.length - 1}}\n                />\n              ) : (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                />\n              )}\n            </Flex>\n          </Text>\n\n          <Button\n            text={t('banners.release.action.open-to-edit')}\n            tone={tone}\n            onClick={handleGoToEdit}\n          />\n        </Flex>\n      }\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      paddingY={0}\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={1} flex={1}>\n          <Text size={1}>\n            <Flex align=\"center\" justify=\"center\" gap={2}>\n              <LockIcon />{' '}\n              <Translate\n                t={tCore}\n                i18nKey=\"release.banner.scheduled-for-publishing-on\"\n                values={{\n                  date: formatRelativeLocalePublishDate(currentRelease),\n                }}\n              />\n            </Flex>\n          </Text>\n        </Flex>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const willBeUnpublished = isGoingToUnpublish(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && willBeUnpublished) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Text size={1}>\n            <Translate\n              t={t}\n              i18nKey=\"banners.unpublished-release-banner.text\"\n              values={{\n                title,\n              }}\n              components={{\n                VersionBadge: getVersionInlineBadge(selectedPerspective),\n              }}\n            />\n          </Text>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'react-i18next'\nimport {css, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Text muted size={1}>\n          {schemaType.title ?? schemaType.name}\n        </Text>\n      )}\n\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\nimport {useConditionalToast} from './useConditionalToast'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={setRef}>\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={\n                  connectionState === 'reconnecting' || formState.readOnly || !editState?.ready\n                }\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {CheckmarkIcon, ChevronDownIcon} from '@sanity/icons'\nimport {Menu, TabList, useElementSize} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ComponentType, type ReactNode, useCallback, useState} from 'react'\n\nimport {Button, MenuButton, MenuItem, Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nfunction DelayedDiv({children, show}: {show: boolean; children: ReactNode}) {\n  return (\n    <motion.div\n      key={show ? 'show' : 'wait'}\n      initial={{opacity: show ? 1 : 0}}\n      animate={{opacity: 1}}\n      transition={\n        show\n          ? {duration: 0.2}\n          : // We delay the showing the element to avoid flickering\n            {delay: 1, duration: 0.2}\n      }\n    >\n      {children}\n    </motion.div>\n  )\n}\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs({parentRef}: {parentRef: HTMLDivElement | null}) {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const [tabList, setTabList] = useState<HTMLDivElement | null>(null)\n  const parentSize = useElementSize(parentRef)\n  const tabListSize = useElementSize(tabList)\n\n  const parentWidth = parentSize?.border?.width ?? 0\n  const tabListWidth = tabListSize?.border?.width ?? 0\n\n  const tabPanelId = `${paneKey}tabpanel`\n  const activeTab = views.find((view) => view.id === activeViewId)\n\n  if (parentWidth < 480 || tabListWidth > 200) {\n    return (\n      <DelayedDiv\n        // We immediately show the dropdown if the elements have been calculated\n        show={Boolean(parentWidth + tabListWidth)}\n      >\n        <MenuButton\n          id={`${paneKey}tab-menu`}\n          popover={{\n            placement: 'bottom-end',\n            portal: true,\n          }}\n          button={<Button iconRight={ChevronDownIcon} mode=\"bleed\" text={activeTab?.title ?? ''} />}\n          menu={\n            <Menu>\n              {views.map((view, index) => (\n                <DocumentHeaderMenuItem\n                  icon={view.icon}\n                  id={`${paneKey}tab-${view.id}`}\n                  isActive={activeViewId === view.id}\n                  key={view.id}\n                  label={view.title}\n                  tabPanelId={tabPanelId}\n                  viewId={index === 0 ? null : (view.id ?? null)}\n                />\n              ))}\n            </Menu>\n          }\n        />\n      </DelayedDiv>\n    )\n  }\n  return (\n    <DelayedDiv show={Boolean(tabListWidth)}>\n      <TabList space={1} ref={setTabList}>\n        {views.map((view, index) => (\n          <DocumentHeaderTab\n            icon={view.icon}\n            id={`${paneKey}tab-${view.id}`}\n            isActive={activeViewId === view.id}\n            key={view.id}\n            label={view.title}\n            tabPanelId={tabPanelId}\n            viewId={index === 0 ? null : (view.id ?? null)}\n          />\n        ))}\n      </TabList>\n    </DelayedDiv>\n  )\n}\n\nfunction DocumentHeaderMenuItem(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <MenuItem\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      text={label}\n      onClick={handleClick}\n      selected={isActive}\n      pressed={isActive}\n      iconRight={isActive ? CheckmarkIcon : undefined}\n    />\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(\n    () => showTabs && <DocumentHeaderTabs parentRef={parentRef} />,\n    [showTabs, parentRef],\n  )\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  return (\n    <PaneHeader\n      ref={setParentRef}\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {isLiveEditEnabled} from '../../../components/paneItem/helpers'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {AddToReleaseBanner} from './banners/AddToReleaseBanner'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DraftLiveEditBanner} from './banners/DraftLiveEditBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  const isLiveEdit = isLiveEditEnabled(schemaType)\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n    if (isScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish\n    ) {\n      return (\n        <AddToReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          value={displayed || undefined}\n        />\n      )\n    }\n\n    if (\n      activeView.type === 'form' &&\n      isLiveEdit &&\n      ready &&\n      editState?.draft?._id &&\n      !selectedReleaseId\n    ) {\n      return (\n        <DraftLiveEditBanner\n          displayed={displayed}\n          documentId={documentId}\n          schemaType={schemaType}\n        />\n      )\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading || !ready) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    ready,\n    activeView.type,\n    isLiveEdit,\n    editState?.draft?._id,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete, release}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId)\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState === 'publishing' ||\n        publishState === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        // eslint-disable-next-line no-nested-ternary\n        publishState === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      // eslint-disable-next-line no-nested-ternary\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState === 'published' || publishState === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  isDraftId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const isDraft = displayed?._id && isDraftId(displayed?._id)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable no-warning-comments */\n/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  Hotkeys,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, showMenu, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const sideMenuItems = useMemo(() => {\n    return selectedReleaseId ? [firstActionState, ...menuActionStates] : menuActionStates\n  }, [selectedReleaseId, firstActionState, menuActionStates])\n\n  const canShowAction = firstActionState && !selectedReleaseId && !editState?.liveEdit\n\n  /* Version / Bundling handling */\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {canShowAction && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {/* if it's in version we always only want to show the items on the side menu and not on the main action */}\n      {((showMenu && menuActionStates.length > 0) || selectedReleaseId) && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions: allActions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected'}\n        // isMenuOpen={isMenuOpen}\n        // onMenuOpen={handleMenuOpen}\n        // onMenuClose={handleMenuClose}\n        showMenu={actions.length > 1}\n        states={states}\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n      />\n    ),\n    [actions.length, connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      actionProps={editState}\n      group=\"default\"\n    >\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {actions, connectionState, editState, revisionId: revision} = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        showMenu={false}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n\n  return (\n    <RenderActionCollectionState\n      actions={historyActions}\n      actionProps={actionProps as any}\n      group=\"default\"\n    >\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  VersionChip,\n} from 'sanity'\nimport {usePaneRouter} from 'sanity/structure'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion)\n        return {\n          selected:\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(displayed?._id || ''),\n        }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.draft ? (\n              <>\n                {editState?.draft._updatedAt ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.edited-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                  />\n                ) : (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.created-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                {isLiveEdit\n                  ? t('release.chip.tooltip.draft-disabled.live-edit')\n                  : t('release.chip.tooltip.no-edits')}\n              </>\n            )}\n          </Text>\n        }\n        selected={isDraftSelected}\n        disabled={isDraftDisabled}\n        text={t('release.chip.draft')}\n        tone={editState?.draft ? 'caution' : 'neutral'}\n        onClick={handlePerspectiveChange('drafts')}\n        contextValues={{\n          documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType: documentType,\n          fromRelease: 'draft',\n          isVersion: false,\n          disabled: !editState?.draft,\n        }}\n      />\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${theme.space[3]}px;\n      background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n    }\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={`language-filter-${idx}`}\n                    schemaType={schemaType}\n                  />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={editState}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              key=\"split-pane-button\"\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller>\n                <Flex flex={1} gap={1} overflow=\"auto\" paddingX={3}>\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          nodes={contextMenuNodes}\n          key=\"context-menu\"\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={badge.title}\n          disabled={!badge.title}\n          key={`${badge.label}-${index}`}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex align=\"center\" gap={2} key={userId} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {message.text}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, revisionId, onChange: onDocumentChange} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(revisionId)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const isDisabled = typeof documentIdStack?.previousId === 'undefined'\n\n  // TODO: It would be preferable to display the option in an inert state, but the `isDisabled`\n  // property does not appear to have any impact. Instead, we simply exclude the option when\n  // there is no version to compare.\n  if (isDisabled) {\n    return null\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    isDisabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type ReactNode, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useSanityCreateConfig, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter, usePane} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value, isInitialValueLoading, ready, documentId, schemaType} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const {startInCreateBanner: StartInCreateBanner} = useSanityCreateConfig().components ?? {}\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          {StartInCreateBanner && (\n            <ShowWhenPaneOpen>\n              <StartInCreateBanner\n                document={value}\n                documentId={documentId}\n                documentType={schemaType}\n                documentReady={ready}\n                isInitialValueLoading={!!isInitialValueLoading}\n                panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n              />\n            </ShowWhenPaneOpen>\n          )}\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n\n/**\n * Prevents whatever is inside of it from rendering when the pane is collapsed.\n * Needed locally as DocumentLayout does lives outside PaneContext, but is provided _somewhere_ within it.\n */\nfunction ShowWhenPaneOpen(props: {children: ReactNode}) {\n  const {collapsed} = usePane()\n  return collapsed ? null : props.children\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {omit} from 'lodash'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","/* eslint-disable camelcase */\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n\n  const perspective = usePerspective()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = revisionId !== null\n      return seeingHistoryDocument || isDeleting || isDeleted\n    },\n    [getIsDeleted, isDeleting, revisionId],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n      return value\n    },\n    [onOlderRevision, revisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    documentType,\n    documentId,\n    initialValue: initialValue.value,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      default:\n        version = 'draft'\n    }\n\n    return version\n  }, [selectedPerspectiveName, selectedReleaseId, params, value._id])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      ...(selectedReleaseId && {versionName: selectedReleaseId}),\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        navigator.clipboard.writeText(window.location.toString())\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      pushToast,\n      t,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      documentType,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        lastNonDeletedRevId,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      lastNonDeletedRevId,\n    ],\n  )\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      onProgrammaticFocus(pathFromUrl)\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(eventsStore.revision?.document && eventsStore.revision?.revisionId),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview isPlaceholder layout={layout} key={num} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                <Translate\n                  t={t}\n                  i18nKey=\"panes.document-list-pane.error.text\"\n                  values={{error: error.message}}\n                  components={{Code: ({children}) => <code>{children}</code>}}\n                />\n              </Text>\n              <ErrorActions error={error} eventId={null} onRetry={onRetry} />\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={loadingVariant === 'subtle' ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            key={key}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type SchemaType, type SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_SCHEMA_TYPE_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[], strict: boolean = false): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_SCHEMA_TYPE_FIELDS.includes(head)) {\n      const errorMessage = `The current ordering config targeted the nonexistent field \"${head}\" on schema type \"${schemaType.name}\". It should be one of ${schemaType.fields.map((field) => field.name).join(', ')}`\n      if (strict) {\n        throw new Error(errorMessage)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(errorMessage)\n      }\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(\n  schemaType: SchemaType,\n  orderBy: SortOrderingItem[],\n  strict: boolean = false,\n): string {\n  return orderBy\n    .map((ordering) => joinReferences(schemaType, ordering.field.split('.'), strict))\n    .join(', ')\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  take,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport interface SearchQueryResult {\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<SanityDocumentLike[]>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryResult> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${filter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && ev.type !== 'welcome') {\n        // If the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong and we should throw.\n        return throwError(\n          () =>\n            new Error(\n              ev.type === 'reconnect'\n                ? 'Could not establish EventSource connection'\n                : `Received unexpected type of first event \"${ev.type}\"`,\n            ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    filter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event) => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${filter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    swr(swrKey),\n    map(({fromCache, value}) => ({fromCache, documents: value})),\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, of} from 'rxjs'\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchError((err: unknown, caught$) => {\n        return concat(\n          of({type: 'error' as const, error: safeError(err)}),\n          merge(fromEvent(window, 'online'), onRetry$).pipe(\n            take(1),\n            mergeMap(() => caught$),\n          ),\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            fromCache: event.result.fromCache,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        throw new Error('Unexpected')\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {error, items, isLoading, fromCache, isLoadingFullList} = useObservable(\n    queryResults$,\n    INITIAL_QUERY_STATE,\n  )\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          disabled={Boolean(error)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            loadingVariant === 'subtle' && !searchInputValue ? DelayedSubtleSpinnerIcon : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        items={items}\n        key={paneKey}\n        layout={layout}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      key={header.id}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        as=\"tr\"\n        key={row.original._id + row.id}\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell {...cell} key={row.original._id + cell.id} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box as=\"tr\" key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane {...props} key={props.pane.id} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string,\n  ) {\n    super(message)\n    this.name = 'SerializeError'\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n  API_VERSION_REQUIRED_FOR_CUSTOM_FILTER = 'structure-api-version-required-for-custom-filter',\n}\n","import {type SortOrdering} from '@sanity/types'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.last-edited',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  i18n: {\n    title: {\n      key: 'menu-items.sort-by.created',\n      ns: structureLocaleNamespace,\n    },\n  },\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SortIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrdering, type SortOrderingItem} from '@sanity/types'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type Intent} from './Intent'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getExtendedProjection} from './util/getExtendedProjection'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Menu item action type\n * @public */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * Menu items parameters\n *\n * @public */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * Interface for menu items\n *\n * @public */\nexport interface MenuItem {\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /**\n   * Menu Item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here as a fallback if no i18n key is\n   * provided and compatibility with older plugins\n   */\n  title: string\n  /** Menu Item action */\n  action?: MenuItemActionType\n  /** Menu Item intent */\n  intent?: Intent\n  /** Menu Item group */\n  group?: string\n  // TODO: align these with TemplateItem['icon']\n  /** Menu Item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** Menu Item parameters. See {@link MenuItemParamsType} */\n  params?: MenuItemParamsType\n  /** Determine if it will show the MenuItem as action */\n  showAsAction?: boolean\n}\n\n/**\n * Partial menu items\n * @public\n */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * Class for building menu items.\n *\n * @public */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  /** menu item option object. See {@link PartialMenuItem} */\n  protected spec: PartialMenuItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItem,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set menu item action\n   * @param action - menu item action. See {@link MenuItemActionType}\n   * @returns menu item builder based on action provided. See {@link MenuItemBuilder}\n   */\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  /**\n   * Get menu item action\n   * @returns menu item builder action. See {@link PartialMenuItem}\n   */\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  /**\n   * Set menu item intent\n   * @param intent - menu item intent. See {@link Intent}\n   * @returns menu item builder based on intent provided. See {@link MenuItemBuilder}\n   */\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  /**\n   * Get menu item intent\n   * @returns menu item intent. See {@link PartialMenuItem}\n   */\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  /**\n   * Set menu item title\n   * @param title - menu item title\n   * @returns menu item builder based on title provided. See {@link MenuItemBuilder}\n   */\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  /**\n   * Get menu item title. Note that the `i18n` configuration will take\n   * precedence and this title is left here for compatibility.\n   * @returns menu item title\n   */\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item builder based on i18n config provided. See {@link MenuItemBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set menu item group\n   * @param group - menu item group\n   * @returns menu item builder based on group provided. See {@link MenuItemBuilder}\n   */\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  /**\n   * Get menu item group\n   * @returns menu item group. See {@link PartialMenuItem}\n   */\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  /**\n   * Set menu item icon\n   * @param icon - menu item icon\n   * @returns menu item builder based on icon provided. See {@link MenuItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Get menu item icon\n   * @returns menu item icon. See {@link PartialMenuItem}\n   */\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set menu item parameters\n   * @param params - menu item parameters. See {@link MenuItemParamsType}\n   * @returns menu item builder based on parameters provided. See {@link MenuItemBuilder}\n   */\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  /**\n   * Get meny item parameters\n   * @returns menu item parameters. See {@link PartialMenuItem}\n   */\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  /**\n   * Set menu item to show as action\n   * @param showAsAction - determine if menu item should show as action\n   * @returns menu item builder based on if it should show as action. See {@link MenuItemBuilder}\n   */\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  /**\n   * Check if menu item should show as action\n   * @returns true if menu item should show as action, false if not. See {@link PartialMenuItem}\n   */\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  /** Serialize menu item builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns menu item node based on path provided in options. See {@link MenuItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`,\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  /** Clone menu item builder\n   * @param withSpec - menu item options. See {@link PartialMenuItem}\n   * @returns menu item builder based on context and spec provided. See {@link MenuItemBuilder}\n   */\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  {by, title, i18n}: SortOrdering,\n  extendedProjection?: string,\n): MenuItemBuilder {\n  let builder = new MenuItemBuilder(context)\n    .group('sorting')\n    .title(\n      context.i18n.t('default-menu-item.fallback-title', {\n        // note this lives in the `studio` bundle because that one is loaded by default\n        ns: 'studio',\n        replace: {title}, // replaces the `{{title}}` option\n      }),\n    ) // fallback title\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by, extendedProjection})\n\n  if (i18n) {\n    builder = builder.i18n(i18n)\n  }\n\n  return builder\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string,\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by)),\n  )\n}\n","import {type I18nTextRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath,\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Interface for menu item groups\n * @public\n */\nexport interface MenuItemGroup {\n  /** Menu group Id */\n  id: string\n  /** Menu group title */\n  title: string\n  i18n?: I18nTextRecord<'title'>\n}\n\n/**\n * Class for building menu item groups.\n *\n * @public\n */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  /** Menu item group ID */\n  protected _id: string\n  /** Menu item group title */\n  protected _title: string\n\n  protected _i18n?: I18nTextRecord<'title'>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItemGroup,\n  ) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n    this._i18n = spec ? spec.i18n : undefined\n  }\n\n  /**\n   * Set menu item group ID\n   * @param id - menu item group ID\n   * @returns menu item group builder based on ID provided. See {@link MenuItemGroupBuilder}\n   */\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group ID\n   * @returns menu item group ID\n   */\n  getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set menu item group title\n   * @param title - menu item group title\n   * @returns menu item group builder based on title provided. See {@link MenuItemGroupBuilder}\n   */\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {title, id: this._id, i18n: this._i18n})\n  }\n\n  /**\n   * Get menu item group title\n   * @returns menu item group title\n   */\n  getTitle(): string {\n    return this._title\n  }\n\n  /**\n   * Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - object with i18n key and related namespace\n   * @returns menu item group builder based on i18n info provided. See {@link MenuItemGroupBuilder}\n   */\n  i18n(i18n: I18nTextRecord<'title'>): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {i18n, id: this._id, title: this._title})\n  }\n\n  /**\n   * Get the i18n key and namespace used to populate the localized title.\n   * @returns the i18n key and namespace used to populate the localized title.\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this._i18n\n  }\n\n  /**\n   * Serialize menu item group builder\n   * @param options - serialization options (path). See {@link SerializeOptions}\n   * @returns menu item group based on path provided in options. See {@link MenuItemGroup}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title, _i18n} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n      i18n: _i18n,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {type SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined,\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment,\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\n\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {type I18nTextRecord} from 'sanity'\n\nimport {type IntentChecker} from './Intent'\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {type UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Interface for component\n *\n * @public\n */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component menu items, array of type {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** Component menu item group, array of type {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n  /** Component options */\n  options: {[key: string]: unknown}\n  canHandleIntent?: IntentChecker\n}\n\n/**\n * Interface for component input\n *\n * @public\n */\nexport interface ComponentInput extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for buildable component\n *\n * @public\n */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  /** Component of type {@link UserComponent} */\n  component?: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  canHandleIntent?: IntentChecker\n}\n\n/**\n * Class for building components\n *\n * @public\n */\nexport class ComponentBuilder implements Serializable<Component> {\n  /** component builder option object */\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  /** Set Component ID\n   * @param id - component ID\n   * @returns component builder based on ID provided\n   */\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get ID\n   * @returns ID\n   */\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  /** Set Component title\n   * @param title - component title\n   * @returns component builder based on title provided (and ID)\n   */\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Component title\n   * @returns title\n   */\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ComponentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Component child\n   * @param child - child component\n   * @returns component builder based on child component provided\n   */\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Component child\n   * @returns child component\n   */\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  /** Set component\n   * @param component - user built component\n   * @returns component builder based on component provided\n   */\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  /** Get Component\n   * @returns component\n   */\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  /** Set Component options\n   * @param options - component options\n   * @returns component builder based on options provided\n   */\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  /** Get Component options\n   * @returns component options\n   */\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  /** Set Component menu items\n   * @param menuItems - component menu items\n   * @returns component builder based on menuItems provided\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  /** Get Component menu items\n   * @returns menu items\n   */\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set Component menu item groups\n   * @param menuItemGroups - component menu item groups\n   * @returns component builder based on menuItemGroups provided\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get Component menu item groups\n   * @returns menu item groups\n   */\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ComponentBuilder {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Serialize component\n   * @param options - serialization options\n   * @returns component object based on path provided in options\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      canHandleIntent: this.spec.canHandleIntent,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path),\n      ),\n    }\n  }\n\n  /** Clone component builder (allows for options overriding)\n   * @param withSpec - component builder options\n   * @returns cloned builder\n   */\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getPublishedId, type SourceClientOptions} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string,\n): Promise<string | undefined> {\n  const query = '*[sanity::versionOf($publishedId)][0]._type'\n\n  const type = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {publishedId: getPublishedId(id)},\n    {tag: 'structure.resolve-type'},\n  )\n\n  return type\n}\n","import {kebabCase} from 'lodash'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from '../StructureNodes'\nimport {type View} from '../types'\nimport {validateId} from '../util/validateId'\nimport {type ComponentViewBuilder} from './ComponentView'\nimport {type FormViewBuilder} from './FormView'\n\n/**\n * Interface for base view\n *\n * @public */\nexport interface BaseView {\n  /** View id */\n  id: string\n  /** View Title */\n  title: string\n  /** View Icon */\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * Class for building generic views.\n *\n * @public\n */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  /** Generic view option object */\n  protected spec: TView = {} as TView\n\n  /** Set generic view ID\n   * @param id - generic view ID\n   * @returns generic view builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n  /** Get generic view ID\n   * @returns generic view ID\n   */\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic view title\n   * @param title - generic view title\n   * @returns generic view builder based on title provided and (if provided) its ID.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  /** Get generic view title\n   * @returns generic view title\n   */\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic view icon\n   * @param icon - generic view icon\n   * @returns generic view builder based on icon provided.\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  /** Get generic view icon\n   * @returns generic view icon\n   */\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  /** Serialize generic view\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic view object based on path provided in options. See {@link BaseView}\n   */\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - Partial generic view builder options. See {@link BaseView}\n   * @returns Generic view builder.\n   */\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath,\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * View builder. See {@link ComponentViewBuilder} and {@link FormViewBuilder}\n *\n * @public\n */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {isRecord} from 'sanity'\n\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {type SerializeOptions} from '../StructureNodes'\nimport {type UserViewComponent} from '../types'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for component views.\n *\n * @public */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  /** Component view components. See {@link UserViewComponent} */\n  component: UserViewComponent\n  /** Component view options */\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * Class for building a component view.\n *\n * @public */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  /** Partial Component view option object. See {@link ComponentView} */\n  protected spec: Partial<ComponentView>\n\n  constructor(\n    /**\n     * Component view component or spec\n     * @param componentOrSpec - user view component or partial component view. See {@link UserViewComponent} and {@link ComponentView}\n     */\n    componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n  ) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  /** Set view Component\n   * @param component - component view component. See {@link UserViewComponent}\n   * @returns component view builder based on component view provided. See {@link ComponentViewBuilder}\n   */\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  /** Get view Component\n   * @returns Partial component view. See {@link ComponentView}\n   */\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  /** Set view Component options\n   * @param options - component view options\n   * @returns component view builder based on options provided. See {@link ComponentViewBuilder}\n   */\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  /** Get view Component options\n   * @returns component view options. See {@link ComponentView}\n   */\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  /** Serialize view Component\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns component view based on path provided in options. See {@link ComponentView}\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  /** Clone Component view builder (allows for options overriding)\n   * @param withSpec - partial for component view option. See {@link ComponentView}\n   * @returns component view builder. See {@link ComponentViewBuilder}\n   */\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SerializeOptions} from '../StructureNodes'\nimport {type BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for form views.\n *\n * @public */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * Class for building a form view.\n *\n * @public */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  /** Document list options. See {@link FormView} */\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  /**\n   * Serialize Form view builder\n   * @param options - Serialize options. See {@link SerializeOptions}\n   * @returns form view builder based on path provided in options. See {@link FormView}\n   */\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  /**\n   * Clone Form view builder (allows for options overriding)\n   * @param withSpec - Partial form view builder options. See {@link FormView}\n   * @returns form view builder. See {@link FormViewBuilder}\n   */\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type UserViewComponent} from '../types'\nimport {type ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {type FormView, FormViewBuilder} from './FormView'\n\nexport * from './ComponentView'\nexport * from './FormView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>,\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {type SchemaType} from '@sanity/types'\nimport {uniq} from 'lodash'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver} from './ChildResolver'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type DocumentNode,\n  type EditorNode,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext, type View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {validateId} from './util/validateId'\nimport {form} from './views'\nimport {maybeSerializeView, type ViewBuilder} from './views/View'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment,\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * Interface for options of Partial Documents. See {@link PartialDocumentNode}\n *\n * @public */\nexport interface DocumentOptions {\n  /** Document Id */\n  id: string\n  /** Document Type */\n  type: string\n  /** Document Template */\n  template?: string\n  /** Template parameters */\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * Interface for partial document (focused on the document pane)\n *\n * @public */\nexport interface PartialDocumentNode {\n  /** Document Id */\n  id?: string\n  /** Document title */\n  title?: string\n  /** I18n key and namespace used to populate the localized title */\n  i18n?: I18nTextRecord<'title'>\n  /** Document children of type {@link Child} */\n  child?: Child\n  /**\n   * Views for the document pane. See {@link ViewBuilder} and {@link View}\n   */\n  views?: (View | ViewBuilder)[]\n  /**\n   * Document options. See {@link DocumentOptions}\n   */\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * A `DocumentBuilder` is used to build a document node.\n *\n * @public */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  /** Component builder option object See {@link PartialDocumentNode} */\n  protected spec: PartialDocumentNode\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: PartialDocumentNode,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set Document Builder ID\n   * @param id - document builder ID\n   * @returns document builder based on ID provided. See {@link DocumentBuilder}\n   */\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get Document Builder ID\n   * @returns document ID. See {@link PartialDocumentNode}\n   */\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  /** Set Document title\n   * @param title - document title\n   * @returns document builder based on title provided (and ID). See {@link DocumentBuilder}\n   */\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Document title\n   * @returns document title. See {@link PartialDocumentNode}\n   */\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): DocumentBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /** Set Document child\n   * @param child - document child\n   * @returns document builder based on child provided. See {@link DocumentBuilder}\n   */\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Document child\n   * @returns document child. See {@link PartialDocumentNode}\n   */\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  /** Set Document ID\n   * @param documentId - document ID\n   * @returns document builder with document based on ID provided. See {@link DocumentBuilder}\n   */\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  /** Get Document ID\n   * @returns document ID. See {@link DocumentOptions}\n   */\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  /** Set Document Type\n   * @param documentType - document type\n   * @returns document builder with document based on type provided. See {@link DocumentBuilder}\n   */\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  /** Get Document Type\n   * @returns document type. See {@link DocumentOptions}\n   */\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  /** Set Document Template\n   * @param templateId - document template ID\n   * @param parameters - document template parameters\n   * @returns document builder with document based on template provided. See {@link DocumentBuilder}\n   */\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  /** Get Document Template\n   * @returns document template. See {@link DocumentOptions}\n   */\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  /** Get Document's initial value Template parameters\n   * @returns document template parameters. See {@link DocumentOptions}\n   */\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  /** Set Document views\n   * @param views - document views. See {@link ViewBuilder} and {@link View}\n   * @returns document builder with document based on views provided. See {@link DocumentBuilder}\n   */\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  /** Get Document views\n   * @returns document views. See {@link ViewBuilder} and {@link View}\n   */\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  /** Serialize Document builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document node based on path, index and hint provided in options. See {@link DocumentNode}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint,\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint,\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path),\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint,\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  /** Clone Document builder\n   * @param withSpec - partial document node specification used to extend the cloned builder. See {@link PartialDocumentNode}\n   * @returns document builder based on context and spec provided. See {@link DocumentBuilder}\n   */\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>,\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters,\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {type InitialValueTemplateItem} from 'sanity'\n\nimport {type BaseIntentParams, type IntentParams} from './Intent'\nimport {type MenuItem, MenuItemBuilder} from './MenuItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Serializable, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * A `InitialValueTemplateItemBuilder` is used to build a document node with an initial value set.\n *\n * @public\n */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  /** Initial Value template item option object. See {@link InitialValueTemplateItem} */\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: Partial<InitialValueTemplateItem>,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set initial value template item builder ID\n   * @param id - initial value template item ID\n   * @returns initial value template item based on ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  /** Get initial value template item builder ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  /** Set initial value template item title\n   * @param title - initial value template item title\n   * @returns initial value template item based on title provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  /** Get initial value template item title\n   * @returns initial value template item title. See {@link InitialValueTemplateItem}\n   */\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  /** Set initial value template item description\n   * @param description - initial value template item description\n   * @returns initial value template item builder based on description provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  /** Get initial value template item description\n   * @returns initial value template item description. See {@link InitialValueTemplateItem}\n   */\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  /** Set initial value template ID\n   * @param templateId - initial value template item template ID\n   * @returns initial value template item based builder on template ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  /** Get initial value template item template ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  /** Get initial value template item template parameters\n   * @param parameters - initial value template item parameters\n   * @returns initial value template item builder based on parameters provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  /** Get initial value template item template parameters\n   * @returns initial value template item parameters. See {@link InitialValueTemplateItem}\n   */\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  /** Serialize initial value template item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns initial value template item object based on the path, index and hint provided in options. See {@link InitialValueTemplateItem}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - initial value template item builder options. See {@link InitialValueTemplateItemBuilder}\n   * @returns initial value template item builder based on the context and options provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext,\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath,\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[],\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create'\n\n    const params: BaseIntentParams = {}\n    if (template && template.schemaType) {\n      params.type = template.schemaType\n    }\n\n    if (item.templateId) {\n      params.template = item.templateId\n    }\n\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    const i18n = item.i18n || template?.i18n\n\n    let builder = new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || AddIcon)\n      .intent({type: 'create', params: intentParams})\n\n    if (i18n) {\n      builder = builder.i18n(i18n)\n    }\n\n    return builder.serialize()\n  })\n}\n","import {type SearchParam} from 'sanity/router'\n\nimport {getTypeNamesFromFilter, type PartialDocumentList} from './DocumentList'\nimport {type StructureNode} from './StructureNodes'\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * Base intent parameters\n *\n * @public\n * @todo dedupe with core\n */\nexport interface BaseIntentParams {\n  /**\n   * Document schema type name to create/edit.\n   * Required for `create` intents, optional for `edit` (but encouraged, safer and faster)\n   */\n  type?: string\n\n  /**\n   * ID of the document to create/edit.\n   * Required for `edit` intents, optional for `create`.\n   */\n  id?: string\n\n  /**\n   * Name (ID) of initial value template to use for `create` intent. Optional.\n   */\n  template?: string\n\n  /**\n   * Experimental field path\n   *\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n\n  /**\n   * Optional \"mode\" to use for edit intent.\n   * Known modes are `structure` and `presentation`.\n   */\n  mode?: string\n\n  /**\n   * Arbitrary/custom parameters are generally discouraged - try to keep them to a minimum,\n   * or use `payload` (arbitrary JSON-serializable object) instead.\n   */\n  [key: string]: string | undefined\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * Intent parameters\n * See {@link structure.BaseIntentParams} and {@link structure.IntentJsonParams}\n *\n * @public\n */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * Interface for intents\n * @public */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  /** Intent type */\n  type: string\n  /** Intent parameters. See {@link IntentParams}\n   */\n  params?: IntentParams\n\n  searchParams?: SearchParam[]\n}\n\n/**\n * Interface for intent checker\n *\n * @public\n */\nexport interface IntentChecker {\n  (\n    /** Intent name */\n    intentName: string,\n    /** Intent checker parameter */\n    params: {[key: string]: any},\n    /** Structure context. See {@link StructureNode} */\n    context: {pane: StructureNode; index: number},\n  ): boolean\n  /** intent checker identify */\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {type I18nTextRecord, type InitialValueTemplateItem, type PreviewLayoutKey} from 'sanity'\n\nimport {\n  type InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {defaultIntentChecker, type IntentChecker} from './Intent'\nimport {layoutOptions} from './Layout'\nimport {maybeSerializeMenuItem, type MenuItem, type MenuItemBuilder} from './MenuItem'\nimport {\n  maybeSerializeMenuItemGroup,\n  type MenuItemGroup,\n  type MenuItemGroupBuilder,\n} from './MenuItemGroup'\nimport {SerializeError} from './SerializeError'\nimport {\n  type Child,\n  type Serializable,\n  type SerializeOptions,\n  type StructureNode,\n} from './StructureNodes'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * Interface for list display options\n *\n * @public */\nexport interface ListDisplayOptions {\n  /** Check if list display should show icons */\n  showIcons?: boolean\n}\n\n/**\n * Interface for base generic list\n *\n * @public\n */\nexport interface BaseGenericList extends StructureNode {\n  /** List layout key. */\n  defaultLayout?: PreviewLayoutKey\n  /** Can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** List display options. See {@link ListDisplayOptions} */\n  displayOptions?: ListDisplayOptions\n  /** List child. See {@link Child} */\n  child: Child\n  /** List initial values array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * Interface for generic list\n *\n * @public\n */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  /** List type */\n  type: string\n  /** List menu items array. See {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** List menu item groups array. See {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * Interface for buildable generic list\n *\n * @public\n */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  /** List menu items array. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** List menu items groups array. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for generic list input\n * Allows builders and only requires things not inferrable\n *\n * @public */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  /** Input id */\n  id: string\n  /** Input title */\n  title: string\n  /** Input menu items groups. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Input menu items groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  /** Input initial value array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  /** Input default layout. */\n  defaultLayout?: PreviewLayoutKey\n  /** If input can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** Input child of type {@link Child} */\n  child?: Child\n}\n\n/**\n * Class for building generic lists\n *\n * @public\n */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  /** Check if initial value templates are set */\n  protected initialValueTemplatesSpecified = false\n  /** Generic list option object */\n  protected spec: TList = {} as TList\n\n  /** Set generic list ID\n   * @param id - generic list ID\n   * @returns generic list builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  /** Get generic list ID\n   * @returns generic list ID\n   */\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic list title\n   * @param title - generic list title\n   * @returns generic list builder based on title and ID provided.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get generic list title\n   * @returns generic list title\n   */\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ConcreteImpl {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): TList['i18n'] {\n    return this.spec.i18n\n  }\n\n  /** Set generic list layout\n   * @param defaultLayout - generic list layout key.\n   * @returns generic list builder based on layout provided.\n   */\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  /** Get generic list layout\n   * @returns generic list layout\n   */\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  /** Set generic list menu items\n   * @param menuItems - generic list menu items. See {@link MenuItem} and {@link MenuItemBuilder}\n   * @returns generic list builder based on menu items provided.\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  /** Get generic list menu items\n   * @returns generic list menu items\n   */\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set generic list menu item groups\n   * @param menuItemGroups - generic list menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder}\n   * @returns generic list builder based on menu item groups provided.\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get generic list menu item groups\n   * @returns generic list menu item groups\n   */\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Set generic list child\n   * @param child - generic list child. See {@link Child}\n   * @returns generic list builder based on child provided (clone).\n   */\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  /** Get generic list child\n   * @returns generic list child\n   */\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  /** Set generic list can handle intent\n   * @param canHandleIntent - generic list intent checker. See {@link IntentChecker}\n   * @returns generic list builder based on can handle intent provided.\n   */\n  canHandleIntent(canHandleIntent?: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Get generic list can handle intent\n   * @returns generic list can handle intent\n   */\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  /** Set generic list display options\n   * @param enabled - allow / disallow for showing icons\n   * @returns generic list builder based on display options (showIcons) provided.\n   */\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  /** Get generic list display options\n   * @returns generic list display options (specifically showIcons)\n   */\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  /** Set generic list initial value templates\n   * @param templates - generic list initial value templates. See {@link InitialValueTemplateItemBuilder}\n   * @returns generic list builder based on templates provided.\n   */\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>,\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  /** Get generic list initial value templates\n   * @returns generic list initial value templates\n   */\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  /** Serialize generic list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic list object based on path provided in options. See {@link GenericList}\n   */\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title,\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path),\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      i18n: this.spec.i18n,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path),\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path),\n      ),\n    }\n  }\n\n  /** Clone generic list builder (allows for options overriding)\n   * @param _withSpec - generic list options.\n   * @returns generic list builder.\n   */\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {AddIcon} from '@sanity/icons'\nimport {type SchemaType, type SortOrderingItem} from '@sanity/types'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, type InitialValueTemplateItem} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions, type ItemChild} from './ChildResolver'\nimport {DocumentBuilder} from './Document'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n} from './GenericList'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Child, type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title,\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType(''),\n    )\n  }\n\n/**\n * Partial document list\n *\n * @public\n */\nexport interface PartialDocumentList extends BuildableGenericList {\n  /** Document list options. See {@link DocumentListOptions} */\n  options?: DocumentListOptions\n  /** Schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document list input\n *\n * @public\n */\nexport interface DocumentListInput extends GenericListInput {\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n}\n\n/**\n * Interface for document list\n *\n * @public\n */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n  /** Document list child. See {@link Child} */\n  child: Child\n  /** Document schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document List options\n *\n * @public\n */\nexport interface DocumentListOptions {\n  /** Document list filter */\n  filter: string\n  /** Document list parameters */\n  params?: Record<string, unknown>\n  /** Document list API version */\n  apiVersion?: string\n  /** Document list API default ordering array. */\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * Class for building document list\n *\n * @public\n */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  /** Set API version\n   * @param apiVersion - API version\n   * @returns document list builder based on the options and API version provided. See {@link DocumentListBuilder}\n   */\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  /** Get API version\n   * @returns API version\n   */\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  /** Set Document list filter\n   * @param filter - GROQ-filter used to determine which documents to display. Do not support joins, since they operate on individual documents, and will ignore order-clauses and projections. See {@link https://www.sanity.io/docs/realtime-updates}\n   * @returns document list builder based on the options and filter provided. See {@link DocumentListBuilder}\n   */\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  /** Get Document list filter\n   * @returns filter\n   */\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  /** Set Document list schema type name\n   * @param type - schema type name.\n   * @returns document list builder based on the schema type name provided. See {@link DocumentListBuilder}\n   */\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  /** Get Document list schema type name\n   * @returns schema type name\n   */\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  /** Set Document list options' parameters\n   * @param params - parameters\n   * @returns document list builder based on the options provided. See {@link DocumentListBuilder}\n   */\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  /** Get Document list options' parameters\n   * @returns options\n   */\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  /** Set Document list default ordering\n   * @param ordering - default sort ordering array. See {@link SortOrderingItem}\n   * @returns document list builder based on ordering provided. See {@link DocumentListBuilder}\n   */\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  /** Get Document list default ordering\n   * @returns default ordering. See {@link SortOrderingItem}\n   */\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  /** Serialize Document list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list object based on path provided in options. See {@link DocumentList}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title,\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    const hasSimpleFilter = this.spec.options?.filter === '_type == $type'\n    if (!hasSimpleFilter && this.spec.options.filter && !this.spec.options.apiVersion) {\n      console.warn(\n        `No apiVersion specified for document type list with custom filter: \\`${this.spec.options.filter}\\`. This will be required in the future. See %s for more info.`,\n        generateHelpUrl(HELP_URL.API_VERSION_REQUIRED_FOR_CUSTOM_FILTER),\n      )\n    }\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        // @todo: make specifying .apiVersion required when using custom (non-simple) filters in v4\n        apiVersion: this.spec.options.apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  /** Clone Document list builder (allows for options overriding)\n   * @param withSpec - override document list spec. See {@link PartialDocumentList}\n   * @returns document list builder. See {@link DocumentListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  /** Get Document list spec\n   * @returns document list spec. See {@link PartialDocumentList}\n   */\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList,\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      }),\n    )\n    .map((option) => ({...option, icon: AddIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {isRecord} from 'sanity'\n\nimport {type ChildResolver, type ChildResolverOptions} from './ChildResolver'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  type BuildableGenericList,\n  type GenericList,\n  GenericListBuilder,\n  type GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {type IntentChecker} from './Intent'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type Divider, type SerializeOptions, type SerializePath} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath,\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index,\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * Interface for List\n *\n * @public\n */\nexport interface List extends GenericList {\n  type: 'list'\n  /** List items. See {@link ListItem} and {@link Divider} */\n  items: (ListItem | Divider)[]\n}\n\n/**\n * Interface for list input\n *\n * @public\n */\nexport interface ListInput extends GenericListInput {\n  /** List input items array. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * Interface for buildable list\n *\n * @public\n */\nexport interface BuildableList extends BuildableGenericList {\n  /** List items. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * A `ListBuilder` is used to build a list of items in the structure tool.\n *\n * @public */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  /** buildable list option object. See {@link BuildableList} */\n  protected spec: BuildableList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListInput,\n  ) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  /**\n   * Set list builder based on items provided\n   * @param items - list items. See {@link ListItemBuilder}, {@link ListItem} and {@link Divider}\n   * @returns list builder based on items provided. See {@link ListBuilder}\n   */\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  /** Get list builder items\n   * @returns list items. See {@link BuildableList}\n   */\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  /** Serialize list builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns list based on path in options. See {@link List}\n   */\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  /**\n   * Clone list builder and return new list builder based on context and spec provided\n   * @param withSpec - list options. See {@link BuildableList}\n   * @returns new list builder based on context and spec provided. See {@link ListBuilder}\n   */\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type Observable} from 'rxjs'\nimport {type I18nTextRecord} from 'sanity'\n\nimport {type ChildResolver, type ItemChild} from './ChildResolver'\nimport {ComponentBuilder} from './Component'\nimport {DocumentBuilder} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListBuilder} from './List'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {\n  type Collection,\n  type CollectionBuilder,\n  type Serializable,\n  type SerializeOptions,\n} from './StructureNodes'\nimport {type StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {validateId} from './util/validateId'\n\n/**\n * Unserialized list item child.\n * See {@link Collection}, {@link CollectionBuilder}, {@link ChildResolver} and {@link ItemChild}\n *\n * @public\n */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * Child of List Item\n * See {@link Collection}, {@link ChildResolver}, {@link ItemChild}\n * @public\n */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * Interface for serialize list item options\n *\n * @public\n */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  /** Check if list item title is optional */\n  titleIsOptional?: boolean\n}\n\n/**\n * Interface for ist item display options\n *\n * @public */\nexport interface ListItemDisplayOptions {\n  /** Check if list item display should show icon */\n  showIcon?: boolean\n}\n\n/**\n * interface for list item input\n *\n * @public */\nexport interface ListItemInput {\n  /** List item id */\n  id: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Interface for List Item\n *\n * @public */\nexport interface ListItem {\n  /** List item id */\n  id: string\n  /** List item type */\n  type: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item title. Note that the `i18n` key and namespace will take precedence. */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType\n}\n\n/**\n * Interface for unserialized list items.\n *\n * @public\n */\nexport interface UnserializedListItem {\n  /** List item ID */\n  id: string\n  /** List item title */\n  title: string\n  /**\n   * The i18n key and namespace used to populate the localized title. This is\n   * the recommend way to set the title if you are localizing your studio.\n   */\n  i18n?: I18nTextRecord<'title'>\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link UnserializedListItemChild} */\n  child?: UnserializedListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Partial list item. See {@link UnserializedListItem}\n *\n * @public */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * Class for building list items\n *\n * @public */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  /** List item option object. See {@link PartialListItem} */\n  protected spec: PartialListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListItemInput,\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set list item ID\n   * @returns list item builder based on ID provided. See {@link ListItemBuilder}\n   */\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  /**\n   * Get list item ID\n   * @returns list item ID. See {@link PartialListItem}\n   */\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  /**\n   * Set list item title\n   * @returns list item builder based on title provided. See {@link ListItemBuilder}\n   */\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /**\n   * Get list item title\n   * @returns list item title. See {@link PartialListItem}\n   */\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  /** Set the i18n key and namespace used to populate the localized title.\n   * @param i18n - the key and namespaced used to populate the localized title.\n   * @returns component builder based on i18n key and ns provided\n   */\n  i18n(i18n: I18nTextRecord<'title'>): ListItemBuilder {\n    return this.clone({i18n})\n  }\n\n  /** Get i18n key and namespace used to populate the localized title\n   * @returns the i18n key and namespace used to populate the localized title\n   */\n  getI18n(): I18nTextRecord<'title'> | undefined {\n    return this.spec.i18n\n  }\n\n  /**\n   * Set list item icon\n   * @returns list item builder based on icon provided. See {@link ListItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Set if list item should show icon\n   * @returns list item builder based on showIcon provided. See {@link ListItemBuilder}\n   */\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  /**\n   * Check if list item should show icon\n   * @returns true if it should show the icon, false if not, undefined if not set\n   */\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  /**\n   *Get list item icon\n   * @returns list item icon. See {@link PartialListItem}\n   */\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set list item child\n   * @param child - list item child. See {@link UnserializedListItemChild}\n   * @returns list item builder based on child provided. See {@link ListItemBuilder}\n   */\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  /**\n   * Get list item child\n   * @returns list item child. See {@link PartialListItem}\n   */\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  /**\n   * Set list item schema type\n   * @param schemaType - list item schema type. See {@link SchemaType}\n   * @returns list item builder based on schema type provided. See {@link ListItemBuilder}\n   */\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  /**\n   * Get list item schema type\n   * @returns list item schema type. See {@link PartialListItem}\n   */\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  /** Serialize list item builder\n   * @param options - serialization options. See {@link ListItemSerializeOptions}\n   * @returns list item node based on path provided in options. See {@link ListItem}\n   */\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED,\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id,\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  /** Clone list item builder\n   * @param withSpec - partial list item options. See {@link PartialListItem}\n   * @returns list item builder based on context and spec provided. See {@link ListItemBuilder}\n   */\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {type SchemaType} from '@sanity/types'\nimport {isRecord} from 'sanity'\n\nimport {DocumentBuilder} from './Document'\nimport {\n  type ListItem,\n  ListItemBuilder,\n  type ListItemInput,\n  type UnserializedListItem,\n} from './ListItem'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {type SerializeOptions} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document list item input\n *\n * @public\n */\nexport interface DocumentListItemInput extends ListItemInput {\n  /** Document list item input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Interface for document list item\n *\n * @public\n */\nexport interface DocumentListItem extends ListItem {\n  /** Document schema type. See {@link SchemaType} */\n  schemaType: SchemaType\n  /** Document ID */\n  _id: string\n}\n\n/**\n * Partial document list item\n *\n * @public\n */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * Class for building a document list item\n *\n * @public\n */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  /** Document list options. See {@link PartialDocumentListItem} */\n  protected spec: PartialDocumentListItem\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListItemInput,\n  ) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Serialize document list item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list item object based on path provided in options. See {@link DocumentListItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index,\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  /** Clone Document list item builder (allows for options overriding)\n   * @param withSpec - Document list item builder options. See {@link PartialDocumentListItem}\n   * @returns document list item builder. See {@link DocumentListItemBuilder}\n   */\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {type SchemaType} from '@sanity/types'\n\nimport {DocumentListBuilder, type DocumentListInput, type PartialDocumentList} from './DocumentList'\nimport {type GenericListInput} from './GenericList'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {type Child} from './StructureNodes'\nimport {type StructureContext} from './types'\n\n/**\n * Interface for document type list input\n *\n * @public\n */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  /** Document type list input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Class for building a document type list\n *\n * @public\n */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput,\n  ) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set Document type list child\n   * @param child - Child component. See {@link Child}\n   * @returns document type list builder based on child component provided without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  /** Clone Document type list builder (allows for options overriding)\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder. See {@link DocumentTypeListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  /** Clone Document type list builder (allows for options overriding) and remove default intent handler\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {type SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {type DocumentListBuilder} from './DocumentList'\nimport {DocumentTypeListBuilder, type DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {type List} from './List'\nimport {type ListItem, ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {type Collection} from './StructureNodes'\nimport {type StructureContext} from './types'\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string,\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput,\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {\n          id: 'sorting',\n          title: 'Sort',\n          i18n: {title: {key: 'menu-item-groups.actions-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'layout',\n          title: 'Layout',\n          i18n: {title: {key: 'menu-item-groups.layout-group', ns: structureLocaleNamespace}},\n        },\n        {\n          id: 'actions',\n          title: 'Actions',\n          i18n: {title: {key: 'menu-item-groups.sorting-group', ns: structureLocaleNamespace}},\n        },\n      ],\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId})),\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.compact-view', ns: structureLocaleNamespace}})\n          .title('Compact view') // fallback title\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .i18n({title: {key: 'menu-items.layout.detailed-view', ns: structureLocaleNamespace}})\n          .title('Detailed view') // fallback title\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ],\n    )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {uniqueId} from 'lodash'\nimport {isValidElementType} from 'react-is'\nimport {getConfigContextFromSource, getPublishedId, type Source} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {ComponentBuilder, type ComponentInput} from './Component'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {DocumentListBuilder} from './DocumentList'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport {\n  getDocumentTypeList,\n  getDocumentTypeListItem,\n  getDocumentTypeListItems,\n} from './documentTypeListItems'\nimport {\n  defaultInitialValueTemplateItems,\n  InitialValueTemplateItemBuilder,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport {ListBuilder} from './List'\nimport {ListItemBuilder} from './ListItem'\nimport {getOrderingMenuItem, getOrderingMenuItemsForSchemaType, MenuItemBuilder} from './MenuItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {type Divider} from './StructureNodes'\nimport {\n  type DefaultDocumentNodeResolver,\n  type StructureBuilder,\n  type StructureContext,\n  type UserComponent,\n} from './types'\nimport * as views from './views'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .i18n({title: {key: 'default-definition.content-title', ns: structureLocaleNamespace}})\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>,\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n      <Flex gap={1}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n        {optionsMenu}\n      </Flex>\n    </Tooltip>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\nimport {usePaneRouter} from 'sanity/structure'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge $tone={event.release ? getReleaseTone(event.release) : undefined}>\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{content: t('timeline-item.menu-button.tooltip')}}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata.title ||\n                            t('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata.title || t('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        isPublishDocumentVersionEvent(event) &&\n        documentVariantType === 'draft' &&\n        event.creationEvent\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          paddingBottom={1}\n          paddingRight={1}\n          key={event.timestamp}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  // eslint-disable-next-line no-nested-ternary\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {BoundaryElementProvider, Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {diff, loading: diffLoading} = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <ChangesError />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Card, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {type DocumentInspectorProps, useSource, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  return (\n    <FadeInFlex direction=\"column\" padding={0} height=\"fill\" data-ready={isReady ? '' : undefined}>\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.no-errors-message')}\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker, i) => (\n              <ValidationCard\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n","import {type ReactNode, useMemo, useState} from 'react'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {createStructureBuilder, type DefaultDocumentNodeResolver} from './structureBuilder'\nimport {\n  type StructureResolver,\n  type StructureToolContextValue,\n  type UnresolvedPaneNode,\n} from './types'\n\n/** @internal */\nexport interface StructureToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: ReactNode\n}\n\n/** @internal */\nexport function StructureToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: StructureToolProviderProps): React.JSX.Element {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: StructureToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed],\n  )\n\n  const structureTool: StructureToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return (\n    <StructureToolContext.Provider value={structureTool}>{children}</StructureToolContext.Provider>\n  )\n}\n"],"names":["structureLocaleNamespace","structureUsEnglishLocaleBundle","defineLocaleResourceBundle","locale","namespace","resources","DocTitle","props","$","_c","document","documentValue","schema","useSchema","t0","_type","get","schemaType","t","useTranslation","t1","value","error","useValuePreview","t2","t3","message","errorMessage","title","color","ChevronWrapper","styled","Box","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","theme","rem","sanity","space","DocumentIdFlex","Flex","OtherReferenceCount","difference","totalCount","references","length","count","Symbol","for","t4","t5","PaneItemPreview","icon","layout","presence","versionsInfo","useDocumentVersionInfo","_id","perspectiveStack","usePerspective","documentPreviewStore","getPreviewStateObservable","previewStateObservable","snapshot","isLoading","original","previewIsLoading","useObservable","draft","published","versions","status","tooltip","getPreviewValueWithFallback","fallback","t6","BackLink","forwardRef","ref","routerPanesState","groupIndex","useContext","PaneRouterContext","slice","panes","state","usePaneLayout","pane","PaneLayoutContext","Error","ChildLink","childId","childParameters","childPayload","rest","id","params","payload","ParameterizedLink","currentPanes","siblingIndex","nextParams","useUnique","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","nextState","t7","ReferenceChildLink","children","documentId","documentType","parentRefPath","template","pathToString","type","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","getPublishedId","documentPresence","useDocumentPresence","useDocumentPreviewStore","name","linkProps","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","documentTitle","action","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","toast","useToast","item","UnknownIcon","renderPreviewItem","DocumentTitle","T0","T1","T2","t10","t11","t12","t8","t9","normalizedDatasetNames","datasetSubtitle","datasets","join","context","t13","t14","t15","t16","Card","map","item_0","borderTop","undefined","documentCount","minWidth","filter","_temp","t17","index","projectId","datasetName","CopyIcon","content","navigator","clipboard","writeText","catch","push","reference","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","getDraftId","publishedId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","omitted","nonExistant","doc","reason","some","fetchCrossDatasetReferences","checkDocumentId","of","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","documentStore","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","isInternalReferencesLoading","isCrossDatasetReferencesLoading","Array","from","Set","Boolean","sort","projectIds","_temp2","_temp3","_temp4","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","DialogBody","LoadingContainer","attrs","align","direction","justify","ConfirmDeleteDialog","onCancel","onConfirm","dialogId","useId","showConfirmButton","text","cancelButton","confirmButton","ConfirmDeleteDialogContainer","setError","useState","handleRetry","tone","Delay","ms","ready","setReady","timeoutId","setTimeout","clearTimeout","useEffect","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","Root","Layer","PaneDivider","disabled","element","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","maxWidth","selected","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","p","find","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","useRef","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","contextValue","bb0","bb1","hidden","divider","Infinity","t18","style","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","child","childIndex","key","child_0","childIndex_0","PaneContextMenuItemResolver","intent","PaneContextMenuItem","tooltipContent","useI18nText","hotkey","split","iconRight","CheckmarkIcon","onAction","PaneContextIntentMenuItem","intentLink","useIntentLink","handleClick","href","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","hasCritical","hasCaution","nodeIndex","RootCard","PaneFooter","$border","css","Layout","TitleCard","fg","bg","card","enabled","TitleTextSkeleton","TextSkeleton","TitleText","Text","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","warn","PaneHeaderMenuItemActionButton","hotkeys","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","path","parentElement","childNodes","unshift","EMPTY_PATH","_sortElements","elements","WeakMap","set","_sortByElementPath","a","b","_a","_b","len","i","aIndex","bIndex","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","data","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","groups","itemGroup","g","i18n","ungroupedItems","group","shortcut","actionHandler","showAsAction","childIdx","IntentButton","linkRef","searchParams","Link","InsufficientPermissionsMessageTooltip","reveal","currentUser","useCurrentUser","POPOVER_PROPS","getIntent","templates","version","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","templateItems","useTemplates","selectedReleaseId","selectedPerspective","isReleaseActive","useIsReleaseActive","tCore","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","every","nothingGranted","reduce","permissionsById","AddIcon","isPublishedPerspective","disabledByPerspectiveTooltipProps","firstItem","granted","itemIndex","disabled_0","intent_0","acc","permission_0","permission","isNonNullable","hashObject","sortObject","v","isArray","Object","entries","keyA","keyB","localeCompare","JSON","stringify","parse","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","useCallback","console","handler","menuNodes","useMemo","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","description","combinedInitialValueTemplates","uniqBy","MissingSchemaType","Code","getIconWithFallback","defaultIcon","PaneItem","pressed","margin","marginBottom","marginTop","hasSchemaType","clicked","setClicked","isSanityDocument","DocumentIcon","opacity","FolderIcon","preview","metaKey","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","useEditState","RenderActionCollectionState","actionProps","onActionComplete","RenderBadgeCollectionState","badges","badgeProps","useCreatePathSyncChannel","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","routerState","useRouter","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","toPairs","navigateDiffView","exitDiffView","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","URLSearchParams","anyParamSet","param","parseParams","result","errors","isActive","previousDocumentType","previousDocumentId","nextDocumentType","nextDocumentId","documents","previous","useScrollMirror","existentElements","scrollMirror","ScrollMirror","destroy","VersionModeHeaderLayout","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","onSelectPreviousRelease","selectedDocumentId","onSelectNextRelease","justifySelf","Button","CloseIcon","VersionMenu","onSelectRelease","role","findRelease","tStructure","getMenuButtonProps","VersionMenuItem","onSelect","isSelected","getVersionId","MenuItem","getReleaseTone","metadata","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","isReleaseDocument","isPublishedId","isDraftId","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","state_0","deepEquals","Scroller","DiffViewPaneLayout","Container","UiContainer","DiffViewPane","scrollElement","compareDocument","containerElement","portalElement","setPortalElement","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","pathSyncChannel","onPathOpen","subscription","unsubscribe","focusPath","changed","focused","validation","members","isVersionId","compareDocumentEditState","createPatchChannel","EditReferenceLinkComponent","_documentId","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","input","ErrorPane","paneKey","getWaitMessages","thresholds","messageKey","isDev","src","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","setParams","createPathWithParams","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","location","origin","getCommentLink","handleClearSelectedComment","handleOpenCommentsInspector","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","releaseStack","concat","stack","findIndex","id_0","position","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useDocumentTitle","subscribed","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","cleanupId","closable","duration","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","ctrlKey","isDocumentLike","isString","JSONInspectorWrapper","fonts","code","family","sizes","fontSize","syntax","property","constant","string","boolean","number","Search","target","handleChange","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","bottom","outline","ignoreCase","Banner","Icon","paddingY","DeletedDocumentBanners","isDeleted","isDeleting","isDraftPerspective","DeletedDocumentBanner","lastNonDeletedRevId","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","useProjectId","apiVersion","client","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","roles","requestedRole","method","body","requestUrl","then","log","err","response","errMessage","finally","onSubmit","fullscreen","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","part","ReferenceChangedBanner","replaceCurrent","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","pathFromString","referenceInfoObservable","parentRefPathSegment","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","TOAST_DELAY","AddToReleaseBanner","currentRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","lastUpdate","handleAddToRelease","now","useCurrentTime","getTime","getVersionInlineBadge","VersionBadge","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","ResolvedLiveEdit","DraftLiveEditBanner","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","willBeUnpublished","isGoingToUnpublish","UnpublishIcon","TitleContainer","Stack","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","ev","FormView","margins","openPath","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","readOnly","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DelayedDiv","show","DocumentHeaderTabs","parentRef","activeViewId","views","tabList","setTabList","parentSize","useElementSize","tabListSize","parentWidth","tabListWidth","tabPanelId","view","activeTab","ChevronDownIcon","view_0","view_1","index_0","DocumentHeaderMenuItem","label","viewId","setView","DocumentHeaderTab","DocumentHeaderTitle","DocumentPanelSubHeader","setParentRef","showTabs","showBackButton","ArrowLeftIcon","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","isLiveEdit","scrollTo","inspectDialog","showInspector","isSystemBundle","isPinnedDraftOrPublish","banners","showFormView","_DEBUG","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","isTopLayer","useLayer","useGlobalKeyDown","useClickOutsideEvent","Grid","ModalDialog","showCloseButton","Dialog","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","useDocumentPairPermissions","TrashIcon","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","hasDraft","doPublish","validationComplete","didPublish","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","showMenu","states","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","sideMenuItems","canShowAction","footerAction","DocumentStatusBarActions","allActions","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","handlePerspectiveChange","perspective","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","menuButtonNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","renderDocumentBadges","badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","TimelineError","versionError","Popover","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","open","setOpen","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","i18nKey","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","StatusText","RevisionStatusLine","useResizeObserver","onResize","resizeObserver","observe","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","isReady","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","TransferIcon","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","isInitialValueLoading","portalElements","startInCreateBanner","StartInCreateBanner","ShowWhenPaneOpen","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","paneDialog","changesInspectorTab","useDocumentLayoutComponent","DocumentURLCopied","getInitialValueTemplateOpts","opts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","useDocumentPaneInitialValue","paneOptions","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","omit","handleLegacyInspectClose","handleInspectorAction","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","DocumentPaneProvider","onFocusPath","forcedVersion","historyStore","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","setPaneParams","viewsProp","documentIdRaw","diffViewRouter","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","versionName","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","toString","startsWith","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","useTimelineStore","revTime","sinceAttributes","timelineDisplayed","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","mergeDocumentType","providerProps","handleEditReference","childParams","routerPanesStateLength","activePath","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","keys","LoadingView","num","DocumentListPaneContent","childItemId","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","mainContent","removePublishedWithDrafts","collate","entry","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","IMPLICIT_SCHEMA_TYPE_FIELDS","joinReferences","strict","head","tail","schemaField","refTypes","tailFields","tailWrapper","getExtendedProjection","ordering","swr","createSWR","listenSearchQuery","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","take","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","useDocumentList","searchFilter","paramsProp","sortOrder","useWorkspace","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","takeUntil","caught$","safeError","scan","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","getBorderStyle","inputProps","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","ChevronRightIcon","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","addSelectedStateToMenuItems","isEqual","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","SerializeError","constructor","parentPath","pathSegment","hint","withHelpUrl","helpId","HELP_URL","ORDER_BY_UPDATED_AT","ns","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getI18n","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","_i18n","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","match","getStructureNodeId","camelCased","camelCase","test","getSlug","ComponentBuilder","getChild","getComponent","getOptions","getMenuItemGroups","canHandleIntent","componentOptions","resolveTypeForDocument","getClient","GenericViewBuilder","kebabCase","isSerializable","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","resolveDocumentNode","itemId","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","getInitialValueTemplate","getInitialValueTemplateParameters","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","getDocumentOptions","documentFromEditor","documentFromEditorWithInitialValue","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","subtitle","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","tpl","initialValueTemplateItem","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","isEdit","isCreate","typedSpec","paneFilter","getTypeNamesFromFilter","identity","layoutOptions","noChildResolver","shallowIntentChecker","GenericListBuilder","initialValueTemplatesSpecified","getDefaultLayout","getCanHandleIntent","getShowIcons","getInitialValueTemplates","validateFilter","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","Promise","resolve","DocumentListBuilder","getApiVersion","getFilter","getDefaultOrdering","FILTER_REQUIRED","generateHelpUrl","API_VERSION_REQUIRED_FOR_CUSTOM_FILTER","inferInitialValueTemplates","inferTypeName","getSpec","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","override","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","defaultDocumentNode","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","args","documentTypeListItem","documentTypeListItems","documentWithInitialValueTemplate","defaultDocument","menuItemGroup","documentList","documentListItem","orderingMenuItem","orderingMenuItemsForType","editor","isValidElementType","uniqueId","LiveEditBadge","liveEditSchemaType","activePanes","setActivePanes","getIntentState","editDocumentId","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","ChangeFieldWrapper","rootDiff","showFromValue","documentContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","documentVariantType","getDocumentVariantType","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","EventsInspector","getChangesList","changesList$","diffLoading","toEvent","sinceEvents","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","paneRouterTab","setPaneRouterTab","changesInspector","RestoreIcon","getPathTitles","f","itemType","_key","MARKER_ICON","InfoOutlineIcon","MARKER_TONE","ValidationInspector","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","Fragment","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","isPayloadLike","exclusiveParams","isTruthy","parseChunks","sibling","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","flat","parseOldPanesSegment","restOfSiblings","buffer","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","lazy","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","StructureToolProvider","structure","resolveStructure","setLayoutCollapsed","useConfigContextFromSource","S","rootPaneNode","structureContext"],"mappings":"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"}